CHIP And16 {
    IN a[16], b[16];
    OUT out[16];

    PARTS:
    //first nand bit by bit
    Nand(a=a[0], b=b[0], out=nandout0);
    Nand(a=a[1], b=b[1], out=nandout1);
    Nand(a=a[2], b=b[2], out=nandout2);
    Nand(a=a[3], b=b[3], out=nandout3);
    Nand(a=a[4], b=b[4], out=nandout4);
    Nand(a=a[5], b=b[5], out=nandout5);
    Nand(a=a[6], b=b[6], out=nandout6);
    Nand(a=a[7], b=b[7], out=nandout7);
    Nand(a=a[8], b=b[8], out=nandout8);
    Nand(a=a[9], b=b[9], out=nandout9);
    Nand(a=a[10], b=b[10], out=nandout10);
    Nand(a=a[11], b=b[11], out=nandout11);
    Nand(a=a[12], b=b[12], out=nandout12);
    Nand(a=a[13], b=b[13], out=nandout13);
    Nand(a=a[14], b=b[14], out=nandout14);
    Nand(a=a[15], b=b[15], out=nandout15);

    //second nand bit by bit
    Nand(a=nandout0, b=nandout0, out=out[0]);
    Nand(a=nandout1, b=nandout1, out=out[1]);
    Nand(a=nandout2, b=nandout2, out=out[2]);
    Nand(a=nandout3, b=nandout3, out=out[3]);
    Nand(a=nandout4, b=nandout4, out=out[4]);
    Nand(a=nandout5, b=nandout5, out=out[5]);
    Nand(a=nandout6, b=nandout6, out=out[6]);
    Nand(a=nandout7, b=nandout7, out=out[7]);
    Nand(a=nandout8, b=nandout8, out=out[8]);
    Nand(a=nandout9, b=nandout9, out=out[9]);
    Nand(a=nandout10, b=nandout10, out=out[10]);
    Nand(a=nandout11, b=nandout11, out=out[11]);
    Nand(a=nandout12, b=nandout12, out=out[12]);
    Nand(a=nandout13, b=nandout13, out=out[13]);
    Nand(a=nandout14, b=nandout14, out=out[14]);
    Nand(a=nandout15, b=nandout15, out=out[15]);
}